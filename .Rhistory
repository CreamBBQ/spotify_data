tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()))
tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, Valence))
tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence))
tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id))
tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
order_by(rank)
tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
order_by(., rank)
tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
arrange(., rank)
get_recommendations_all(tracks$id, valence = NULL)
View(get_recommendations_all(tracks$id, valence = NULL))
tracks
data.frame(id = tracks$id, rank = tracks$rank) %>%
merge(., get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10)))
get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10))
data.frame(, rank = tracks$rank) %>%
merge(., get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10)))
data.frame(rank = tracks$rank) %>%
merge(., get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10)))
data.frame(id_og = tracks$id, rank = tracks$rank) %>%
merge(., get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10)))
data.frame(id_og = tracks$id, rank = tracks$rank) %>%
merge(., get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10))) %>%
select(id_og, name, artists, id )
data.frame(id_og = tracks$id, rank = tracks$rank) %>%
merge(., get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10))) %>%
select(id_og, name, artists, id ) %>%
mutate(artist = sapply(artists, process_element))
data.frame(id_og = tracks$id, rank = tracks$rank) %>%
merge(., get_recommendations_all(tracks$id, valence = NULL) %>%
mutate(rank = seq(1:10))) %>%
select(id_og, name, artists, id ) %>%
mutate(artists = sapply(artists, process_element))
tracks
get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artist, id) %>%
mutate(artists = sapply(artists, process_element))
get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
artist_top <- get_my_top_artists_or_tracks(
type = "artists",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
View(artist_top)
artist_top
artist_top %>%
select(images) %>%
mutate(aber = .[[1]])
artist_top %>%
select(images) %>%
mutate(aber = .[1,1])
View(artist_top[[4]][[1]])
artist_top %>%
select(images) %>%
mutate(aber = .[["url"]]])
artist_top %>%
select(images) %>%
mutate(aber = .[["url"]])
artist_top$images
artist_top$images[["url"]]
artist_top$images[, 2]
artist_top$images[[, 2]]
(artist_top$images)$url
(artist_top$images)$url
artist_top[[4]]
artist_top[[4]][["url"]]
artist_top[[4]][[, 2]]
artist_top[[4]][[]]
artist_top[[4]][[2]]
unlist(artist_top$images)
artist_top[, 1]
artist_top$images[, 1]
artist_top$images[1, 1]
artist_top$images[[1, 1]]
artist_top$images[1]
artist_top$images[[, 2]]
artist_top %>%
select(images) %>%
mutate(url = function(images) images[[1]]$url)
library(purrr)
artist_top %>%
select(images) %>%
mutate(url = map_chr(function(images) images[[1]]$url))
artist_top %>%
select(images) %>%
mutate(url = map_chr(function(image_list) imgae_list[[1]]$url))
artist_top %>%
select(images) %>%
mutate(url = map_chr(function(image_list) image_list[[1]]$url))
artist_top %>%
select(images) %>%
mutate(url = map_chr(images, function(image_list) image_list[[1]]$url))
artist_top %>%
select(images) %>%
mutate(aber = .[["url"]])
artist_top %>%
select(images) %>%
mutate(aber = images[["url"]])
artist_top %>%
select(images) %>%
mutate(aber = images[["url"]][["url"]])
artist_top %>%
select(images) %>%
mutate(aber = images[["url"]])
View(artist_top %>%
select(images) %>%
mutate(aber = images[["url"]]))
View(artist_top %>%
select(images) %>%
mutate(aber = images["url"]))
View(artist_top %>%
select(images) %>%
mutate(aber = images[["url"]]))
mutate(aber = images[[1]])
mutate(aber = images[[1]])
mutate(aber = images)
View(artist_top %>%
select(images) %>%
mutate(aber = images))
View(artist_top %>%
select(images) %>%
mutate(aber = unlist(images)))
View(artist_top %>%
select(images) %>%
mutate(aber = unlist(images)))
artist_top %>%
select(images) %>%
mutate(aber = unlist(images))
unlist(artist_top$images)
View(unlist(artist_top$images))
View(unlist(artist_top$images))[1]
View(unlist(artist_top$images))[[1]]
(unlist(artist_top$images))[[1]]
(unlist(artist_top$images))[[2]]
(unlist(artist_top$images))[[3]]
(unlist(artist_top$images))[[4]]
(unlist(artist_top$images))
View(unlist(artist_top$images))
(unlist(artist_top$images))[["url1"]]
(unlist(artist_top$images))["url1"]
(unlist(artist_top$images)) %>% filter(Name = "url1")
?unlist
as.data.frame(artist_top$images)
?as.data.frame
View(artist_top[[4]][[1]])
unlist(artist_top$images)
as.data.frame(unlist(artist_top$images))
as.data.frame(artist_top$images)
as.data.frame(artist_top$images) %>%
select(starts_with("url"))
sapply(artist_top$images, function(x) x[[1]])
sapply(artist_top$images, function(x) x[[2]])
sapply(artist_top$images, function(x) x[[2]])[1, ]
artist_top$name
names(artist_top)
artist_top %>%
select(id, name, images) %>%
mutate(images = sapply(artist_top$images, function(x) x[[2]])[1, ])
artist_top %>%
select(id, name, images) %>%
mutate(images = sapply(artist_top$images, function(x) x[[2]])[1, ])
artist_top %>%
select(id, name, images) %>%
mutate(rank = seq(1:10), images = sapply(artist_top$images, function(x) x[[2]])[1, ])
rm(list = ls())
library(tidyverse)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[2])
Sys.setenv(SPOTIFY_CLIENT_SECRET =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[5])
fecha_yyyymm <- "202405"
################################# TOP SONGS ####################################
tracks <- get_my_top_artists_or_tracks(
type = "tracks",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
process_element <- function(element) {
names <- element$name
if(length(names) > 1) {
paste(names, collapse = " - ")
} else {
names
}
}
tracks <- tracks %>%
select(id, name, artists) %>%
mutate(rank = seq(1:10),
artists = sapply(artists, process_element),
date = fecha_yyyymm)
tracks <- tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
arrange(., rank)
############################# RECOMENDATIONS ####################################
get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
############################### ARTISTS ########################################
artists <- get_my_top_artists_or_tracks(
type = "artists",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
artists <- artists %>%
select(id, name, images) %>%
mutate(rank = seq(1:10), images = sapply(artist_top$images, function(x) x[[2]])[1, ])
artists <- artists %>%
select(id, name, images) %>%
mutate(rank = seq(1:10), images = sapply(images, function(x) x[[2]])[1, ])
View(artists)
rm(list = ls())
library(tidyverse)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[2])
Sys.setenv(SPOTIFY_CLIENT_SECRET =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[5])
fecha_yyyymm <- "202405"
################################# TOP SONGS ####################################
tracks <- get_my_top_artists_or_tracks(
type = "tracks",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
process_element <- function(element) {
names <- element$name
if(length(names) > 1) {
paste(names, collapse = " - ")
} else {
names
}
}
tracks <- tracks %>%
select(id, name, artists) %>%
mutate(rank = seq(1:10),
artists = sapply(artists, process_element),
date = fecha_yyyymm)
tracks <- tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
arrange(., rank)
############################# RECOMENDATIONS ####################################
reommendations <- get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
############################### ARTISTS ########################################
artists <- get_my_top_artists_or_tracks(
type = "artists",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
artists <- artists %>%
select(id, name, images) %>%
mutate(rank = seq(1:10), images = sapply(images, function(x) x[[2]])[1, ])
View(artists)
recommendations <- get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
rm(list = ls())
library(tidyverse)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[2])
Sys.setenv(SPOTIFY_CLIENT_SECRET =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[5])
fecha_yyyymm <- "202405"
################################# TOP SONGS ####################################
tracks <- get_my_top_artists_or_tracks(
type = "tracks",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
process_element <- function(element) {
names <- element$name
if(length(names) > 1) {
paste(names, collapse = " - ")
} else {
names
}
}
tracks <- tracks %>%
select(id, name, artists) %>%
mutate(rank = seq(1:10),
artists = sapply(artists, process_element),
date = fecha_yyyymm)
tracks <- tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
arrange(., rank)
############################# RECOMENDATIONS ####################################
recommendations <- get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
############################### ARTISTS ########################################
artists <- get_my_top_artists_or_tracks(
type = "artists",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
artists <- artists %>%
select(id, name, images) %>%
mutate(rank = seq(1:10), images = sapply(images, function(x) x[[2]])[1, ])
rm(list = ls())
library(tidyverse)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[2])
Sys.setenv(SPOTIFY_CLIENT_SECRET =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[5])
fecha_yyyymm <- "202405"
################################# TOP SONGS ####################################
tracks <- get_my_top_artists_or_tracks(
type = "tracks",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
process_element <- function(element) {
names <- element$name
if(length(names) > 1) {
paste(names, collapse = " - ")
} else {
names
}
}
tracks <- tracks %>%
select(id, name, artists) %>%
mutate(rank = seq(1:10),
artists = sapply(artists, process_element))
tracks <- tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
arrange(., rank)
############################# RECOMENDATIONS ####################################
recommendations <- get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
############################### ARTISTS ########################################
artists <- get_my_top_artists_or_tracks(
type = "artists",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
artists <- artists %>%
select(id, name, images) %>%
mutate(rank = seq(1:10),
images = sapply(images, function(x) x[[2]])[1, ])
View(artists)
View(recommendations)
write.csv(tracks,
file = paste("C:\Users\guill\Desktop\2024\Second Brain\Métricas\Spotify\Top canciones",
paste("C:\Users\guill\Desktop\2024\Second Brain\Métricas\Spotify\Top canciones",
paste("hola", "mundo", sep = " ")
paste("hola", "mundo", sep = "")
paste("hola", "\mundo", sep = "")
write.csv(tracks,
file = paste("C:\Users\guill\Desktop\2024\Second Brain\Métricas\Spotify\Top canciones",
paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top canciones",
"/tracks_", fecha_yyyymm, sep = "")
write.csv(tracks,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top canciones",
"/tracks_", fecha_yyyymm, sep = ""),
row.names = FALSE)
write.csv(tracks,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top canciones",
"/tracks_", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
write.csv(tracks,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top canciones", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
write.csv(tracks,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top canciones/", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
write.csv(recommendations,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Recomendaciones/", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
write.csv(artist,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top artistas/", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
write.csv(artists,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top artistas/", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
View(artists)
View(recommendations)
View(tracks)
rm(list = ls())
library(tidyverse)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[2])
Sys.setenv(SPOTIFY_CLIENT_SECRET =
readLines("C:/Users/guill/Documents/projects/credentials/spotify.txt")[5])
fecha_yyyymm <- "202405"
################################# TOP SONGS ####################################
tracks <- get_my_top_artists_or_tracks(
type = "tracks",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
process_element <- function(element) {
names <- element$name
if(length(names) > 1) {
paste(names, collapse = " - ")
} else {
names
}
}
tracks <- tracks %>%
select(id, name, artists) %>%
mutate(rank = seq(1:10),
artists = sapply(artists, process_element))
tracks <- tracks %>%
merge(.,
get_track_audio_features(.[["id"]], authorization = get_spotify_access_token()) %>%
select(acousticness, danceability, energy, valence, id)) %>%
arrange(., rank)
write.csv(tracks,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top canciones/", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
############################# RECOMENDATIONS ####################################
recommendations <- get_recommendations_all(tracks$id, valence = NULL) %>%
select(name, artists, id) %>%
mutate(artists = sapply(artists, process_element))
write.csv(recommendations,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Recomendaciones/", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
############################### ARTISTS ########################################
artists <- get_my_top_artists_or_tracks(
type = "artists",
limit = 10,
offset = 0,
time_range = "short_term",
authorization = get_spotify_authorization_code(scope = "user-top-read"),
include_meta_info = FALSE
)
artists <- artists %>%
select(id, name, images) %>%
mutate(rank = seq(1:10),
images = sapply(images, function(x) x[[2]])[1, ])
write.csv(artists,
file = paste("C:/Users/guill/Desktop/2024/Second Brain/Métricas/Spotify/Top artistas/", fecha_yyyymm, ".csv", sep = ""),
row.names = FALSE)
View(artists)
View(tracks)
